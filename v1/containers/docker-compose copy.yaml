version: '3'
services:
  nginx:
    container_name: nginx
    build: 
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/conf/privkey.pem:/etc/nginx/ssl/privkey.pem
      - ./nginx/conf/crt.pem:/etc/nginx/ssl/crt.pem
      - ./nginx/conf/passwd:/etc/nginx/ssl/passwd
      - ./nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
      - web_files:/var/www/html
    ports:
      - "80:80"
      - "443:443"
    restart: always
    networks:
      - inc

  mariadb:
    build:
      context: ./db
      dockerfile: Dockerfile
    networks:
      - inc
    volumes:
      - ./db/tools/docker-my.cnf:/etc/mysql/docker-my.cnf
      - database:/var/lib/docker-mysql
    environment:
      - USER_ID=${USER_ID}
      - GROUP_ID=${GROUP_ID}
      - WORDPRESS_HOST_NAME=${WORDPRESS_CONTAINER_NAME}.${BACKEND_NETWORK_NAME}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "mariadb"]
      start_period: "15s"
      interval: "2s"
      timeout: "5s"
      retries: 3
    restart: always
    container_name: ${MYSQL_CONTAINER_NAME}

networks:
  inc:
    driver: bridge

volumes:
  database:
    driver_opts:
      type: none
      device: ${HOME}/data/mysql
      o: bind
  web_files:
    driver_opts:
      type: none
      device: ${HOME}/data/wordpress
      o: bind
