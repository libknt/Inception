services:
  nginx:
    image: nginx
    container_name: nginx
    build: 
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      wordpress:
        condition: service_healthy
    volumes:
      - ./requirements/nginx/conf/server.key:/etc/nginx/ssl/server.key
      - ./requirements/nginx/conf/server.crt:/etc/nginx/ssl/server.crt
      - web_files:/var/www/html
      - ./requirements/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
      - ./requirements/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    networks:
      - frontend

  wordpress:
    image: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    networks:
      frontend:
        aliases:
          - frontend-network
      backend:
        aliases:
          - backend-network
    volumes:
      - web_files:/var/www/html
      - ./requirements/wordpress/conf/www.conf:/etc/php/7.4/fpm/pool.d/www.conf
    env_file:
     - ./.env
    depends_on:
      mariadb:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wp core is-installed --allow-root --path=/var/www/html"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: always
    container_name: wordpress

  mariadb:
    image: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    networks:
      - backend
    volumes:
      - database:/var/lib/docker-mysql
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "mysql -uuser -p${MYSQL_PASSWORD} -e 'SELECT 1'"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 60s
    restart: always
    container_name: mariadb

networks:
  backend:
  frontend:

volumes:
  database:
    driver_opts:
      type: none
      device: ${HOME}/data/mysql
      o: bind
  web_files:
    driver_opts:
      type: none
      device: ${HOME}/data/wordpress
      o: bind